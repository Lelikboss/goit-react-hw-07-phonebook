{"version":3,"sources":["redux/contacts/contactsSlice.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/List/List.js","components/List/fetchApi.js","components/Form/createContact.js","components/ContactFilter/ContactFilter.js","App.js","index.js","components/List/List.module.css","components/List/fetchApi.module.css"],"names":["contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","filterValue","createAction","filter","createReducer","_","payload","contactReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","setupListeners","dispatch","getFilter","state","ContactTable","contacts","onDelete","deleting","useSelector","idFromContacts","map","contact","key","id","allContacts","normalizedFilter","toLowerCase","e","name","includes","getVisibleItems","className","s","list","listFlex","listHeadItem","phone","itemFlex","flexBasis","btn","type","onClick","ContactsList","data","isFetching","isDeleting","isLoading","loader","timeout","List","table","formItemLayout","labelCol","xs","span","sm","wrapperCol","CreateContact","Form","useForm","form","useState","contactName","setContactName","console","log","qwe","undefined","autoComplete","onFinish","values","content","number","resetFields","Item","label","hasFeedback","validateStatus","pattern","onChange","currentTarget","value","placeholder","htmlType","disabled","ContactFilter","useDispatch","target","App","offset","title","subTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.734aae6a.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6194e3ff74c1bd00176c69ec.mockapi.io/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: body => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nexport const filterValue = createAction('filter/value');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterValue } from './contacts-actions';\r\nexport const filter = createReducer('', {\r\n  [filterValue]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactApi } from './contacts/contactsSlice';\r\nimport { combineReducers } from 'redux';\r\nimport { filter } from './contacts/contacts-reducer';\r\nconst contactReducer = combineReducers({\r\n  [contactApi.reducerPath]: contactApi.reducer,\r\n  filter: filter,\r\n});\r\nexport const store = configureStore({\r\n  reducer: contactReducer,\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","export const getFilter = state => state.filter;\r\n","import { useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './List.module.css';\r\n\r\nconst ContactTable = ({ contacts, onDelete, deleting }) => {\r\n  const filter = useSelector(getFilter);\r\n  const idFromContacts = contacts.map(contact => ({\r\n    ...contact,\r\n    key: contact.id,\r\n  }));\r\n  const getVisibleItems = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return idFromContacts.filter(e =>\r\n      e.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const allContacts = getVisibleItems();\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        <li>\r\n          <ul className={s.listFlex}>\r\n            <li className={s.listHeadItem}>Name</li>\r\n            <li className={s.listHeadItem}>Phone</li>\r\n            <li className={s.listHeadItem}>Delete</li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <ul className={s.list}>\r\n            {allContacts.map(({ name, phone, id }) => (\r\n              <li key={id} className={s.itemFlex}>\r\n                <p className={s.flexBasis}>{name}</p>{' '}\r\n                <p className={s.flexBasis}>{phone}</p>\r\n                <button\r\n                  className={s.btn}\r\n                  type=\"button\"\r\n                  onClick={() => onDelete(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default ContactTable;\r\n","import {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from '../../redux/contacts/contactsSlice';\r\nimport List from './List';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './fetchApi.module.css';\r\nexport const ContactsList = () => {\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n  return (\r\n    <div>\r\n      {isFetching && <Loader className={s.loader} timeout={13000} />}\r\n      {data && (\r\n        <List\r\n          className={s.table}\r\n          contacts={data}\r\n          onDelete={deleteContact}\r\n          deleting={isDeleting}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport {\r\n  useCreateContactMutation,\r\n  useFetchContactsQuery,\r\n} from '../../redux/contacts/contactsSlice';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 6,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nexport const CreateContact = () => {\r\n  const [form] = Form.useForm();\r\n  const [contactName, setContactName] = useState('');\r\n  const [createContact] = useCreateContactMutation();\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  console.log(isFetching);\r\n  const handlerSubmit = values => {\r\n    createContact({\r\n      name: values.content,\r\n      phone: values.number,\r\n    });\r\n    form.resetFields();\r\n    setContactName('');\r\n  };\r\n  const handlerChange = e => {\r\n    console.log(e.currentTarget.value);\r\n    setContactName(e.currentTarget.value);\r\n    qwe();\r\n  };\r\n  const qwe = () => {\r\n    if (data !== undefined) {\r\n      return data.map(contact => contact.name).includes(contactName);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      autoComplete=\"off\"\r\n      form={form}\r\n      {...formItemLayout}\r\n      onFinish={handlerSubmit}\r\n    >\r\n      <Form.Item\r\n        type=\"text\"\r\n        name=\"content\"\r\n        label=\"\"\r\n        hasFeedback\r\n        validateStatus={contactName && qwe() === true ? 'warning' : null}\r\n        // help={qwe() === true ? 'Это имя уже занято' : 'Введите имя контакта'}\r\n      >\r\n        <Input\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          onChange={handlerChange}\r\n          placeholder=\"Name\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        type=\"tel\"\r\n        // help={'Введите номер телефона'}\r\n        name=\"number\"\r\n        label=\"\"\r\n      >\r\n        <Input\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          placeholder=\"xxx-xxx-xxx\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"\">\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          disabled={contactName && qwe() === false ? false : true}\r\n        >\r\n          Create contact\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterValue } from '../../redux/contacts/contacts-actions';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst ContactFilter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 6,\r\n      },\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 14,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        {...formItemLayout}\r\n        type=\"text\"\r\n        // help={'Поиск по имени'}\r\n      >\r\n        <Input\r\n          value={value}\r\n          onChange={e => dispatch(filterValue(e.target.value))}\r\n          type=\"text\"\r\n          placeholder=\"Find contact by name\"\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\nexport default ContactFilter;\r\n","import { ContactsList } from './components/List/fetchApi';\nimport { CreateContact } from './components/Form/createContact';\nimport { PageHeader, Divider, Row, Col } from 'antd';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\nexport default function App() {\n  return (\n    <>\n      <Row>\n        <Col span={12} offset={6}>\n          <PageHeader\n            className=\"site-page-header\"\n            title=\"Phonebook\"\n            subTitle=\"This is your phone book\"\n          />\n          <Divider />\n          <ContactFilter />\n          <CreateContact />\n          <ContactsList />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n// import './index.css';\nimport 'antd/dist/antd.css';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__127xy\",\"listFlex\":\"List_listFlex__Kbl4u\",\"listHeadItem\":\"List_listHeadItem__1WZjI\",\"itemFlex\":\"List_itemFlex__1TWg5\",\"btn\":\"List_btn__309Va\",\"flexBasis\":\"List_flexBasis__3pa1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"fetchApi_table__2uRb3\",\"loader\":\"fetchApi_loader__1lvcy\"};"],"sourceRoot":""}